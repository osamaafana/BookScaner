APP_ENV=dev
API_BASE_URL=http://localhost:8000
CORS_ORIGINS=http://localhost:5173,http://localhost:3000

# Postgres (use 'postgres' host if your backend runs in Docker Compose)
PG_HOST=postgres #localhost
PG_PORT=5432
PG_DB=bookscanner
PG_USER=bookscanner
PG_PASSWORD=bookscanner
# If you run backend directly on your host, switch PG_HOST=localhost

REDIS_URL=redis://redis:6379/0   # in Compose; use redis://localhost:6379/0 if host-run

GROQ_API_KEY=your_groq_api_key_here
GROQ_MONTHLY_CAP_USD=10
GROQ_VISION_MODEL=meta-llama/llama-4-scout-17b-16e-instruct

OLLAMA_RECS_MODEL=llama-3.1-70b-versatile
GCV_CREDENTIALS_JSON_PATH=/run/secrets/gcp.json

GOOGLE_VISION_API_KEY=your_google_vision_api_key_here
OPENLIBRARY_ENABLED=true
GOOGLEBOOKS_API_KEY=your_google_books_api_key_here


METADATA_TTL_SECS=432000   # 5 days

JWT_SECRET=change-me
ADMIN_TOKEN=change-me
MAX_UPLOAD_MB=10

LOG_LEVEL=INFO
METRICS_ENABLED=true
GOOGLEBOOKS_ENABLED=true

ALERT_WEBHOOK_URL=

# Rate limits (defaults provided in code if omitted)
RATE_LIMIT_PER_DEVICE_HOURLY=10
RATE_LIMIT_PER_DEVICE_DAILY=30
RATE_LIMIT_PER_IP_PER_MIN=20
RATE_LIMIT_PER_IP_DAILY=200
