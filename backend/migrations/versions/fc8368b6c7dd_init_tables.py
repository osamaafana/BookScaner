"""init tables

Revision ID: fc8368b6c7dd
Revises: 93a2504c2208
Create Date: 2025-09-05 18:57:19.059431

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "fc8368b6c7dd"
down_revision: Union[str, None] = "93a2504c2208"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add 'recommended' to the action_enum (if it doesn't exist)
    op.execute("ALTER TYPE action_enum ADD VALUE IF NOT EXISTS 'recommended'")

    # Create recommendation table
    op.create_table(
        "recommendation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("book_id", sa.Integer(), nullable=False),
        sa.Column("device_id", sa.UUID(), nullable=False),
        sa.Column("score", sa.Float(), nullable=False),
        sa.Column("recommendation_text", sa.Text(), nullable=False),
        sa.Column("match_quality", sa.String(), nullable=False),
        sa.Column("is_perfect_match", sa.String(), nullable=False),
        sa.Column("reasoning", sa.Text(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["book_id"],
            ["book.id"],
        ),
        sa.ForeignKeyConstraint(
            ["device_id"],
            ["device.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop recommendation table
    op.drop_table("recommendation")

    # Note: PostgreSQL doesn't support removing enum values easily
    # The 'recommended' value will remain in the enum but won't be used
    # ### end Alembic commands ###
